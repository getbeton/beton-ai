services:
  postgres:
    image: postgres:15-alpine
    container_name: beton-ai-postgres
    environment:
      POSTGRES_DB: beton_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - beton-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: beton-ai-backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/beton_ai
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - beton-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: beton-ai-frontend
    env_file:
      - ./frontend/.env.local
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - beton-network

volumes:
  postgres_data:

networks:
  beton-network:
    driver: bridge 